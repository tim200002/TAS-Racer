# ===================================================================================
# Description: NAV2 config file. For parameter adjustment related to mapserver,
#                global and local costmap, planners and controllers.
# Modified By: Salman Bari
# Date: Oct 08, 2022
# ===================================================================================
map_server:
  ros__parameters:
    use_sim_time: True
    yaml_filename: "map.yaml"
    # topic_name: "map"
    # frame_id: "map"

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 1.0 #0.2
    alpha2: 0.2
    alpha3: 1.0 #0.2
    alpha4: 0.5 #0.2
    alpha5: 0.2
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    initial_pose: [-9.375, 13.175, 0.0, -1.57]
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 10.0
    laser_min_range: 0.01
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000 #5000
    min_particles: 200 #300
    odom_frame_id: odom_wrong # We cannot durn off ACML but can make it publish to wrong frame
    pf_err: 0.05 #0.01
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1 #2
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 0.5 # 1 is default. Values that works for now are 0.2 and 0.5
    update_min_a: 0.5
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan
    map_topic: map
    first_map_only: false

amcl_map_client:
  ros__parameters:
    use_sim_time: True

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True

  
bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odometry/filtered #coming from EKF -> /odometry/filtered , otherwise -> /odom
    transform_tolerance: 0.1
    goal_blackboard_id: goal
    goals_blackboard_id: goals
    path_blackboard_id: path
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node

global_costmap:
  global_costmap:
    ros__parameters:
      rolling_window: true
      footprint_padding: 0.03
      footprint: "[[0.51, 0.22], [0.51, -0.22], [-0.15, -0.22], [-0.15, 0.22]]"  
      update_frequency: 2.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: True
      #robot_radius: 0.20 # 0.1 # radius set and used, so no footprint points
      resolution: 0.05
      width: 50
      height: 50
      # plugins: ["static_layer", "obstacle_layer"]
      plugins: ["static_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.3  #0.55
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: True
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

local_costmap:
  local_costmap:
    ros__parameters:
      footprint_padding: 0.03
      footprint: "[[0.51, 0.22], [0.51, -0.22], [-0.15, -0.22], [-0.15, 0.22]]"  
      update_frequency: 10.0
      publish_frequency: 2.0
      global_frame: map # it should be odom but to remove warnings from amcl I am putting map
      robot_base_frame: base_footprint
      use_sim_time: True
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      #robot_radius: 0.20
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.8  #0.55
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          # raytrace_max_range: 3.0
          # raytrace_min_range: 0.0
          # obstacle_max_range: 2.5
          # obstacle_min_range: 0.0
      static_layer:
        map_subscribe_transient_local: True
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: True
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True


controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]
    odom_topic: "/odometry/filtered"   #coming from EKF -> /odometry/filtered , otherwise -> /odom

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.1
      yaw_goal_tolerance: 0.25
      stateful: True
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 1.8
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 1.8
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: false
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: true
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 3.2
      max_robot_pose_search_dist: 10.0
      use_interpolation: false

# controller_server:
#   ros__parameters:
#     controller_frequency: 30.0
#     FollowPath:
#       plugin: "nav2_mppi_controller::MPPIController"
#       time_steps: 56
#       model_dt: 0.05
#       batch_size: 2000
#       vx_std: 0.2
#       vy_std: 0.2
#       wz_std: 0.4
#       vx_max: 2.0
#       vx_min: -0.35
#       vy_max: 2.0
#       wz_max: 1.9
#       iteration_count: 1
#       prune_distance: 1.7
#       transform_tolerance: 0.1
#       temperature: 0.3
#       gamma: 0.015
#       motion_model: "DiffDrive"
#       visualize: false
#       TrajectoryVisualizer:
#         trajectory_step: 5
#         time_step: 3
#       AckermannConstrains:
#         min_turning_r: 0.2
#       critics: ["ConstraintCritic", "GoalCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
#       ConstraintCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 4.0
#       GoalCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0
#         threshold_to_consider: 1.0
#       GoalAngleCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 3.0
#         threshold_to_consider: 0.4
#       PreferForwardCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0
#         threshold_to_consider: 0.4
#       ObstaclesCritic:
#         enabled: true
#         cost_power: 1
#         repulsion_weight: 1.5
#         critical_weight: 20.0
#         consider_footprint: false
#         collision_cost: 10000.0
#         collision_margin_distance: 0.1
#         near_goal_distance: 0.5
#       PathAlignCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 14.0
#         max_path_occupancy_ratio: 0.05
#         trajectory_point_step: 3
#         threshold_to_consider: 0.40
#         offset_from_furthest: 20
#       PathFollowCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 5.0
#         offset_from_furthest: 5
#         threshold_to_consider: 0.6
#       PathAngleCritic:
#         enabled: true
#         cost_power: 1
#         cost_weight: 2.0
#         offset_from_furthest: 4
#         threshold_to_consider: 0.40
#         max_angle_to_furthest: 1.0



#! Activate this part when using the offline planned trajectory
# planner_server:
#   ros__parameters:
#     use_sim_time: True
#     planner_plugins: ['GridBased']
#     GridBased:
#       plugin: "offline_planner/OfflinePlanner"
#       trajectory_file: "/home/tim/tas2-racer/out/tracks/demo_dynamic_planning/trajectory_mincurv.csv" # Please overwrite with right path to trajectory

#! Activate this part when using the online planned trajectory
planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ['GridBased']
    GridBased:
      plugin: "online_planner/OnlinePlanner"
      trajectory_file:  "/home/tim/tas2-racer/out/tracks/demo_dynamic_planning/trajectory_mincurv.csv" # Please overwrite with right path to trajectory


waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"   
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base
    transform_timeout: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.15   #0.4
    rotational_acc_lim: 1.5      #3.2

smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 1.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    global_frame: odom
    robot_base_frame: base
    transform_tolerance: 0.1
    use_sim_time: true
    simulate_ahead_time: 4.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.15   #0.4
    rotational_acc_lim: 1.5      #3.2

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True


robot_state_publisher:
  ros__parameters:
    use_sim_time: True